-- Define the visual combination 0:Orange/Red 1:Green/Blond 2:Red/Black
local patient_combi = 0

-- Define the Sickness 0: low 1: medium 2: high
local patient_sickness = 0

-- Define Room 1/2/3
local patient_room = 0

-- Define Medical status 0: Sick 1: Cured 2: Dead
local patient_medical_status = 0 

-- Define status 0: Arriving 1: In bed 2: Leaving 3:Waiting for pickup
local patient_status = 0

-- Spawns and waypoints
local patient_low_spawn = vmath.vector3(592, 305, 0.2)
local patient_low_wp_r1 = vmath.vector3(176, 305, 0.2)
local patient_low_wp_r2 = vmath.vector3(16, 305, 0.2)
local patient_low_wp_r3 = vmath.vector3(-144, 305, 0.2)

local patient_medium_spawn = vmath.vector3(592, 336, 0.2)
local patient_medium_wp_r1 = vmath.vector3(16, 336, 0.2)
local patient_medium_wp_r2 = vmath.vector3(-144, 336, 0.2)
local patient_medium_wp_r3 = vmath.vector3(-305, 336, 0.2)

local patient_high_spawn = vmath.vector3(592, 336, 0.2)
local patient_high_wp_r1 = vmath.vector3(464, 336, 0.2)
local patient_high_wp_r2 = vmath.vector3(304, 336, 0.2)
local patient_high_wp_r3 = vmath.vector3(144, 336, 0.2)

-- BedÂ´s
local patient_low_bed_r1 = vmath.vector3(651, 237, 0.2)
local patient_low_bed_r2 = vmath.vector3(651, 237, 0.2)
local patient_low_bed_r3 = vmath.vector3(651, 237, 0.2)

local patient_medium_bed_r1 = vmath.vector3(651, 463, 0.2)
local patient_medium_bed_r2 = vmath.vector3(651, 463, 0.2)
local patient_medium_bed_r3 = vmath.vector3(651, 463, 0.2)

local patient_high_bed_r1 = vmath.vector3(651, 463, 0.2)
local patient_high_bed_r2 = vmath.vector3(651, 463, 0.2)
local patient_high_bed_r3 = vmath.vector3(651, 463, 0.2)

-- Leave spot
local patient_low_leave = vmath.vector3(-433, 305, 0.2)
local patient_medium_leave = vmath.vector3(-433, 336, 0.2)
local patient_high_leave = vmath.vector3(-433, 336, 0.2)

-- Points for spawned instance
local instance_spawn = vmath.vector3()
local instance_wp = vmath.vector3()
local instance_bed = vmath.vector3()
local instance_leave = vmath.vector3()

-- Move direction
local move_dir = vmath.vector3()

-- Move speed
local move_speed = 100

-- Animations
local animation_walking = hash("_vert")
local animation_bed = hash("_bed")
local animation_wating = hash("_hor")

function init(self)
	-- Roll random visual combination
	patient_combi = math.random(0,8)

	-- Animation
	if patient_combi = 1 then
		animation_walking = hash(combi1"_vert")
		animation_bed = hash("combi1_bed")
		animation_waiting = hash("combi1_hor")
	elseif patient_combi = 2 then
		animation_walking = hash("combi2_vert")
		animation_bed = hash("combi2_bed")
		animation_waiting = hash("combi2_hor")
	elseif patient_combi = 3 then
		animation_walking = hash("combi3_vert")
		animation_bed = hash("combi3_bed")
		animation_waiting = hash("combi3_hor")
	elseif patient_combi = 4 then
		animation_walking = hash("combi4_vert")
		animation_bed = hash("combi4_bed")
		animation_waiting = hash("combi4_hor")
	elseif patient_combi = 5 then
		animation_walking = hash("combi5_vert")
		animation_bed = hash("combi5_bed")
		animation_waiting = hash(combi5"_hor")
	elseif patient_combi = 6 then
		animation_walking = hash("combi6_vert")
		animation_bed = hash("combi6_bed")
		animation_waiting = hash("combi6_hor")
	elseif patient_combi = 7 then
		animation_walking = hash("combi7_vert")
		animation_bed = hash("combi7_bed")
		animation_waiting = hash("combi7_hor")
	elseif patient_combi = 8 then
		animation_walking = hash("combi8_vert")
		animation_bed = hash("combi8_bed")
		animation_waiting = hash("combi8_hor")
	elseif patient_combi = 9 then
		animation_walking = hash("combi9_vert")
		animation_bed = hash("combi9_bed")
		animation_waiting = hash("combi9_hor")
	end
	msg.post("#sprite", "play_animation", { id = animation_walking })
	
	--Roll random sickness
	patient_sickness = math.random(0,2)

	-- Set move direction
	move_dir.x = -1

	-- Set Points for Sickness/Room
	-- Low
	if patient_sickness == 0 then
		instance_spawn = patient_low_spawn
		if patient_room == 1 then
			instance_wp = patient_low_wp_r1
			instance_bed = patient_low_bed_r1 
		elseif patient_room ==2 then
			instance_wp = patient_low_wp_r2 
			instance_bed = patient_low_bed_r2
		elseif patient_room == 3 then
			instance_wp = patient_low_wp_r3
			instance_bed = patient_low_bed_r3
		end
		instance_leave = patient_low_leave
	-- Medium
	elseif patient_sickness == 1 then
		instance_spawn = patient_medium_spawn
		if patient_room == 1 then
			instance_wp = patient_medium_wp_r1 
			instance_bed = patient_medium_bed_r1 
		elseif patient_room ==2 then
			instance_wp = patient_medium_wp_r2 
			instance_bed = patient_medium_bed_r2 
		elseif patient_room == 3 then
			instance_wp = patient_medium_wp_r3
			instance_bed = patient_medium_bed_r3 
		end
		instance_leave = patient_medium_leave

	--High
	elseif patient_sickness == 1 then
		instance_spawn = patient_high_spawn
		if patient_room == 1 then
			instance_wp = patient_high_wp_r1
			instance_bed = patient_high_bed_r1 
		elseif patient_room ==2 then
			instance_wp = patient_high_wp_r2
			instance_bed = patient_high_bed_r2
		elseif patient_room == 3 then
			instance_wp = patient_high_wp_r3
			instance_bed = patient_high_bed_r2 
		end
		instance_leave = patient_high_leave
	end

	-- Set to spawnpoint
	go.set_position(instance_spawn)
end

function update(self, dt)
	--current position
	local position = go.get_position()
	
	-- Update logic
	if patient_medical_status == 0 then
		-- Sick
		if patient_status == 0 then
			-- Arriving
			if position.x < instance_wp.x then
				-- Arrive at room
				patient_status = 1
				msg.post("#sprite", "play_animation", { id = animation_bed })
				go.set_position(instance_bed)
			else
				--still walking
				go.set_position(position + move_dir * move_speed * dt)
			end
		elseif patient_status == 1 then
			-- In Bed waiting for treating
		end
	elseif patient_medical_status == 1 then
		-- Cured
		if patient_status == 2 then
			-- Leaving
			if position.x < instance_leave.x then
				-- Arrive at room
				patient_status = 3
				msg.post("#sprite", "play_animation", { id = animation_waiting })
			else
				--still walking
				go.set_position(position + move_dir * move_speed * dt)
			end
		elseif patient_status == 3 then
			-- Waiting for pickup
		end
	elseif patient_medical_status == 2 then
		-- Dead
		-- Send Msg to game that patient died
		go.delete()
	end
end

function on_message(self, message_id, message, sender)
	if patient_medical_status == 0 then
		-- Sick
		if patient_status == 0 then
			-- Arriving
		elseif patient_status == 1 then
			--In Bed waiting for treating from player
			if message_id == hash("treating")then
				if message.cure == patient_sickness then
					-- cured and leaving
					patient_medical_status = 1 
					patient_status = 2
					go.set_position(instance_wp)
					-- leaving animation
					msg.post("#sprite", "play_animation", { id = animation_walking })
					
					-- free the room
					local room = {id = patient_room}
					msg.post("/game#script", "free_room", room)
				else
					-- Wrong treating = - HP/Time
				end
			end
		end
	elseif patient_medical_status == 1 then
		-- Cured
		if patient_status == 2 then
			-- Leaving
		elseif patient_status == 3 then
			-- Waiting for pickup
			if message_id == hash("picked_up") then
				-- send Msg to game that patient cured
				msg.post("/game#script", "patient_cured")
				go.delete()
			end
		end
	elseif patient_medical_status == 2 then
		-- Dead
	end
end