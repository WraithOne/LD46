-- Spawns and waypoints
local patient_low_spawn = vmath.vector3(592, 305, 0.2)
local patient_low_wp_r1 = vmath.vector3(176, 305, 0.2)
local patient_low_wp_r2 = vmath.vector3(16, 305, 0.2)
local patient_low_wp_r3 = vmath.vector3(-144, 305, 0.2)

local patient_medium_spawn = vmath.vector3(592, 336, 0.2)
local patient_medium_wp_r1 = vmath.vector3(16, 336, 0.2)
local patient_medium_wp_r2 = vmath.vector3(-144, 336, 0.2)
local patient_medium_wp_r3 = vmath.vector3(-305, 336, 0.2)

local patient_high_spawn = vmath.vector3(592, 336, 0.2)
local patient_high_wp_r1 = vmath.vector3(464, 336, 0.2)
local patient_high_wp_r2 = vmath.vector3(304, 336, 0.2)
local patient_high_wp_r3 = vmath.vector3(144, 336, 0.2)

-- BedÂ´s
local patient_low_bed_r1 = vmath.vector3(241, 237, 0.2)
local patient_low_bed_r2 = vmath.vector3(80, 237, 0.2)
local patient_low_bed_r3 = vmath.vector3(-79, 237, 0.2)

local patient_medium_bed_r1 = vmath.vector3(-48, 463, 0.2)
local patient_medium_bed_r2 = vmath.vector3(-208, 463, 0.2)
local patient_medium_bed_r3 = vmath.vector3(-369, 463, 0.2)

local patient_high_bed_r1 = vmath.vector3(432, 463, 0.2)
local patient_high_bed_r2 = vmath.vector3(272, 463, 0.2)
local patient_high_bed_r3 = vmath.vector3(112, 463, 0.2)

-- Leave spot
local patient_low_leave = vmath.vector3(-433, 305, 0.2)
local patient_medium_leave = vmath.vector3(-433, 336, 0.2)
local patient_high_leave = vmath.vector3(-433, 336, 0.2)

-- Move direction
local move_dir = vmath.vector3()

-- Move speed
local move_speed = 100

function init(self)
	-- Roll random visual combination
	local combi = math.random(1,9)
	self.patient_combi = combi 

	-- Animation
	if combi == 1 then
		self.animation_walking = hash("combi1_vert")
		self.animation_bed = hash("combi1_bed")
		self.animation_waiting = hash("combi1_hor")
	elseif combi == 2 then
		self.animation_walking = hash("combi2_vert")
		self.animation_bed = hash("combi2_bed")
		self.animation_waiting = hash("combi2_hor")
	elseif combi == 3 then
		self.animation_walking = hash("combi3_vert")
		self.animation_bed = hash("combi3_bed")
		self.animation_waiting = hash("combi3_hor")
	elseif combi == 4 then
		self.animation_walking = hash("combi4_vert")
		self.animation_bed = hash("combi4_bed")
		self.animation_waiting = hash("combi4_hor")
	elseif combi == 5 then
		self.animation_walking = hash("combi5_vert")
		self.animation_bed = hash("combi5_bed")
		self.animation_waiting = hash("combi5_hor")
	elseif combi == 6 then
		self.animation_walking = hash("combi6_vert")
		self.animation_bed = hash("combi6_bed")
		self.animation_waiting = hash("combi6_hor")
	elseif combi == 7 then
		self.animation_walking = hash("combi7_vert")
		self.animation_bed = hash("combi7_bed")
		self.animation_waiting = hash("combi7_hor")
	elseif combi == 8 then
		self.animation_walking = hash("combi8_vert")
		self.animation_bed = hash("combi8_bed")
		self.animation_waiting = hash("combi8_hor")
	elseif combi == 9 then
		self.animation_walking = hash("combi9_vert")
		self.animation_bed = hash("combi9_bed")
		self.animation_waiting = hash("combi9_hor")
	end
	msg.post("#sprite", "play_animation", { id = self.animation_walking })

	-- Patient arrives sick
	self.patient_status = 0
	self.patient_medical_status = 0
	
	--Roll random sickness
	local sickness = math.random(0,2)
	self.patient_sickness = sickness

	--Roll random room todo: remove
	local room = math.random(1, 3)
	self.patient_room = room
	
	-- Set move direction
	move_dir.x = -1

	-- Set Points for Sickness/Room
	-- Low
	if sickness == 0 then
		self.instance_spawn = patient_low_spawn
		if room == 1 then
			self.instance_wp = patient_low_wp_r1
			self.instance_bed = patient_low_bed_r1 
		elseif room ==2 then
			self.instance_wp = patient_low_wp_r2 
			self.instance_bed = patient_low_bed_r2
		elseif room == 3 then
			self.instance_wp = patient_low_wp_r3
			self.instance_bed = patient_low_bed_r3
		end
		self.instance_leave = patient_low_leave
	-- Medium
		elseif sickness == 1 then
		self.instance_spawn = patient_medium_spawn
		if room == 1 then
			self.instance_wp = patient_medium_wp_r1 
			self.instance_bed = patient_medium_bed_r1 
		elseif room ==2 then
			self.instance_wp = patient_medium_wp_r2 
			self.instance_bed = patient_medium_bed_r2 
		elseif room == 3 then
			self.instance_wp = patient_medium_wp_r3
			self.instance_bed = patient_medium_bed_r3 
		end
		self.instance_leave = patient_medium_leave

	--High
		elseif sickness == 2 then
		self.instance_spawn = patient_high_spawn
		if room == 1 then
			self.instance_wp = patient_high_wp_r1
			self.instance_bed = patient_high_bed_r1 
		elseif room ==2 then
			self.instance_wp = patient_high_wp_r2
			self.instance_bed = patient_high_bed_r2
		elseif room == 3 then
			self.instance_wp = patient_high_wp_r3
			self.instance_bed = patient_high_bed_r3 
		end
		self.instance_leave = patient_high_leave
	end

	-- Set to spawnpoint
	go.set_position(self.instance_spawn)
end

function update(self, dt)
	--current position
	local position = go.get_position()
	
	-- Update logic
	if self.patient_medical_status == 0 then
		-- Sick
		if self.patient_status == 0 then
			-- Arriving
			if position.x < self.instance_wp.x then
				-- Arrive at room
				self.patient_status = 1

				msg.post("#sprite", "play_animation", { id = self.animation_bed })
				go.set_position(self.instance_bed)
			else
				--still walking
				go.set_position(position + move_dir * move_speed * dt)
			end
		elseif self.patient_status == 1 then
			-- In Bed waiting for treating
		end
	elseif self.patient_medical_status == 1 then
		-- Cured
		if self.patient_status == 2 then
			-- Leaving
			if position.x < self.instance_leave.x then
				-- Arrive at room
				self.patient_status = 3
				msg.post("#sprite", "play_animation", { id = self.animation_waiting })
			else
				--still walking
				go.set_position(position + move_dir * move_speed * dt)
			end
		elseif self.patient_status == 3 then
			-- Waiting for pickup
		end
	elseif self.patient_medical_status == 2 then
		-- Dead
		-- Send Msg to game that patient died
		go.delete()
	end
end

function on_message(self, message_id, message, sender)
	if self.patient_medical_status == 0 then
		-- Sick
		if self.patient_status == 0 then
			-- Arriving
		elseif self.patient_status == 1 then
			--In Bed waiting for treating from player
			if message_id == hash("treating")then
				if message.cure == self.patient_sickness then
					-- cured and leaving
					self.patient_medical_status = 1 
					self.patient_status = 2
					go.set_position(self.instance_wp)
					-- leaving animation
					msg.post("#sprite", "play_animation", { id = self.animation_walking })
					
					-- free the room
					local room = {id = self.patient_room}
					msg.post("/game#script", "free_room", room)
				else
					-- Wrong treating = - HP/Time
				end
			end
		end
	elseif self.patient_medical_status == 1 then
		-- Cured
		if self.patient_status == 2 then
			-- Leaving
		elseif self.patient_status == 3 then
			-- Waiting for pickup
			if message_id == hash("picked_up") then
				-- send Msg to game that patient cured
				msg.post("/game#script", "patient_cured")
				go.delete()
			end
		end
	elseif self.patient_medical_status == 2 then
		-- Dead
	end
end