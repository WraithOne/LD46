-- Define the visual combination 0:Orange/Red 1:Green/Blond 2:Red/Black
local patient_combi = 0

-- Define the Sickness 0: low 1: medium 2: high
local patient_sickness = 0

-- Define Room 1/2/3
local patient_room = 0

-- Define Medical status 0: Sick 1: Cured 2: Dead
local patient_medical_status = 0 

-- Define status 0: Arriving 1: In bed 2: Leaving 3:Waiting for pickup
local patient_status = 0

-- Spawns and waypoints
local patient_low_spawn = vmath.vector3(592, 305, 0.2)
local patient_low_wp_r1 = vmath.vector3(176, 305, 0.2)
local patient_low_wp_r2 = vmath.vector3(16, 305, 0.2)
local patient_low_wp_r3 = vmath.vector3(-144, 305, 0.2)

local patient_medium_spawn = vmath.vector3(592, 336, 0.2)
local patient_medium_wp_r1 = vmath.vector3(16, 336, 0.2)
local patient_medium_wp_r2 = vmath.vector3(-144, 336, 0.2)
local patient_medium_wp_r3 = vmath.vector3(-305, 336, 0.2)

local patient_high_spawn = vmath.vector3(592, 336, 0.2)
local patient_high_wp_r1 = vmath.vector3(464, 336, 0.2)
local patient_high_wp_r2 = vmath.vector3(304, 336, 0.2)
local patient_high_wp_r3 = vmath.vector3(144, 336, 0.2)

-- BedÂ´s
local patient_low_bed_r1 = vmath.vector3(651, 237, 0.2)
local patient_low_bed_r2 = vmath.vector3(651, 237, 0.2)
local patient_low_bed_r3 = vmath.vector3(651, 237, 0.2)

local patient_medium_bed_r1 = vmath.vector3(651, 463, 0.2)
local patient_medium_bed_r2 = vmath.vector3(651, 463, 0.2)
local patient_medium_bed_r3 = vmath.vector3(651, 463, 0.2)

local patient_high_bed_r1 = vmath.vector3(651, 463, 0.2)
local patient_high_bed_r2 = vmath.vector3(651, 463, 0.2)
local patient_high_bed_r3 = vmath.vector3(651, 463, 0.2)

-- Leave spot
local patient_low_leave = vmath.vector3(-433, 305, 0.2)
local patient_medium_leave = vmath.vector3(-433, 336, 0.2)
local patient_high_leave = vmath.vector3(-433, 336, 0.2)

-- Points for spawned instance
local instance_spawn = vmath.vector3()
local instance_wp = vmath.vector3()
local instance_bed = vmath.vector3()
local instance_leave = vmath.vector3()

-- Move direction
local move_dir = vmath.vector3()

-- Move speed
move speed = 100

-- Animations
local animation_arriving = hash("Arriving")
local animation_bed = hash("inBed")
local animation = hash("leaving")

function init(self)
	-- Roll random visual combination
	patient_combi = math.random(0,8)
	local anim = hash("Idle")
	
	msg.post("#sprite", "play_animation", { id = anim })
	
	--Roll random sickness
	patient_sickness = math.random(0,2)

	-- Set move direction
	move_dir.x = -1

	-- Set Points for Sickness/Room
	-- Low
	if patient_sickness == 0 then
		instance_spawn = patient_low_spawn
		if patient_room == 1 then
			instance_wp = patient_low_wp_r1
			instance_bed = patient_low_bed_r1 
		elseif patient_room ==2 then
			instance_wp = patient_low_wp_r2 
			instance_bed = patient_low_bed_r2
		elseif patient_room == 3 then
			instance_wp = patient_low_wp_r3
			instance_bed = patient_low_bed_r3
		end
		instance_leave = patient_low_leave
	-- Medium
	elseif patient_sickness == 1 then
		instance_spawn = patient_medium_spawn
		if patient_room == 1 then
			instance_wp = patient_medium_wp_r1 
			instance_bed = patient_medium_bed_r1 
		elseif patient_room ==2 then
			instance_wp = patient_medium_wp_r2 
			instance_bed = patient_medium_bed_r2 
		elseif patient_room == 3 then
			instance_wp = patient_medium_wp_r3
			instance_bed = patient_medium_bed_r3 
		end
		instance_leave = patient_medium_leave

	--High
	elseif patient_sickness == 1 then
		instance_spawn = patient_high_spawn
		if patient_room == 1 then
			instance_wp = patient_high_wp_r1
			instance_bed = patient_high_bed_r1 
		elseif patient_room ==2 then
			instance_wp = patient_high_wp_r2
			instance_bed = patient_high_bed_r2
		elseif patient_room == 3 then
			instance_wp = patient_high_wp_r3
			instance_bed = patient_high_bed_r2 
		end
		instance_leave = patient_high_leave
	end

	-- Set to spawnpoint
	go.set_position(instance_spawn)
end

function update(self, dt)
	-- Update logic
	if patient_medical_status == 0 then
		-- Sick
		if patient_status == 0 then
			-- Arriving
		elseif patient_status == 1 then
			-- In Bed waiting for treating
		end
	elseif patient_medical_status == 1 then
		-- Cured
		if patient_status == 2 then
			-- Leaving
		elseif patient_status == 3 then
			-- Waiting for pickup
		end
	elseif patient_medical_status == 2 then
		-- Dead
		-- Send Msg to game that patient died
		go.delete()
	end

	-- Animation
	
end

function on_message(self, message_id, message, sender)
	if patient_medical_status == 0 then
		-- Sick
		if patient_status == 0 then
			-- Arriving
		elseif patient_status == 1 then
			--In Bed waiting for treating from player
			if message_id == hash("treating")then
				if message.cure == patient_sickness then
					-- cured and leaving
					patient_medical_status = 1 
					patient_status = 2

					-- free the room
					local room = {id = patient_room}
					msg.post("/game#script", "free_room", room)
				else
					-- Wrong treating = - HP/Time
				end
			end
		end
	elseif patient_medical_status == 1 then
		-- Cured
		if patient_status == 2 then
			-- Leaving
		elseif patient_status == 3 then
			-- Waiting for pickup
			if message_id == hash("picked_up") then
				-- send Msg to game that patient cured
				msg.post("/game#script", "patient_cured")
				go.delete()
			end
		end
	elseif patient_medical_status == 2 then
		-- Dead
	end
end